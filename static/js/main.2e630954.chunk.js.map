{"version":3,"sources":["components/Header.js","components/ToolTip.js","components/DataInput.js","components/Checkbox.js","components/Button.js","components/Results.js","components/DataForm.js","components/Footer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","className","ToolTip","props","children","tooltip","DataInput","title","description","symbol","required","name","type","pattern","inputMode","value","onChange","Checkbox","onClick","htmlFor","Button","Resulst","DataForm","useState","data","setData","showResults","setShowResults","eoq","N","TC","TCd","results","setResults","H","D","S","C","Q","Cd","inputData","setInputData","changeHandler","event","target","prevState","Fragment","checked","totalCost","totalDisCountCost","Math","sqrt","parseFloat","toFixed","orderNumber","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2e630954.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>EOQ</h1>\r\n      <h2>میزان اقتصادی سفارش</h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./ToolTip.css\";\r\n\r\nconst ToolTip = (props) => {\r\n  return (\r\n    <div className=\"tooltip\">\r\n      {props.children}\r\n      {props.tooltip && <span className=\"tooltiptext\">{props.tooltip}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolTip;\r\n","import React from \"react\";\r\n\r\nimport ToolTip from \"./ToolTip\";\r\n\r\nimport \"./DataInput.css\";\r\n\r\nconst DataInput = (props) => {\r\n  return (\r\n    <div className=\"data-input\">\r\n      <div className=\"data-text\">\r\n        <ToolTip tooltip={props.tooltip}>\r\n          <h3 className=\"data-title\">{props.title}</h3>\r\n        </ToolTip>\r\n        {props.description && (\r\n          <p className=\"data-description\">{props.description}</p>\r\n        )}\r\n      </div>\r\n      <h3 className=\"data-symbol\">{props.symbol}</h3>\r\n      <input\r\n        required={true}\r\n        name={props.symbol}\r\n        className=\"data-input-input\"\r\n        type=\"number\"\r\n        pattern=\"[0-9]*\"\r\n        inputMode=\"numeric\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataInput;\r\n","import React from \"react\";\r\n\r\nimport \"./Checkbox.css\";\r\n\r\nfunction Checkbox(props) {\r\n  return (\r\n    <div className=\"checkbox\">\r\n      <input\r\n        className=\"checkbox-input\"\r\n        type=\"checkbox\"\r\n        name=\"checkbox\"\r\n        onClick={props.onClick}\r\n      />\r\n      <label htmlFor=\"checkbox\">\r\n        محاسبه هزینه کل برای سفارشات تعداد بالا با تخفیف در قیمت کالا\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className=\"action-button \" type=\"submit\" onClick={props.onClick}>\r\n      EOQ محاسبه\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport ToolTip from \"./ToolTip\";\r\n\r\nimport \"./Results.css\";\r\n\r\nconst Resulst = (props) => {\r\n  return (\r\n    <div className=\"results\">\r\n      <div className=\"results-text\">\r\n        <ToolTip tooltip={props.tooltip}>\r\n          <h3 className=\"results-title\">{props.title}</h3>\r\n        </ToolTip>\r\n        {props.description && (\r\n          <p className=\"results-description\">{props.description}</p>\r\n        )}\r\n      </div>\r\n      <h3 className=\"results-symbol\">{props.symbol}</h3>\r\n\r\n      <h3 className=\"results-value\">{props.value}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resulst;\r\n","import React, { useState } from \"react\";\r\n\r\nimport DataInput from \"./DataInput\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Button from \"./Button\";\r\nimport Resulsts from \"./Results\";\r\n\r\nimport \"./DataForm.css\";\r\n\r\nfunction DataForm() {\r\n  const [data, setData] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [results, setResults] = useState({\r\n    eoq: \"\",\r\n    N: \"\",\r\n    TC: \"\",\r\n    TCd: \"\",\r\n  });\r\n\r\n  const checkboxClickHandler = (event) => {\r\n    setData(event.target.checked);\r\n  };\r\n\r\n  const [inputData, setInputData] = useState({\r\n    H: \"\",\r\n    D: \"\",\r\n    S: \"\",\r\n    C: \"\",\r\n    Q: \"\",\r\n    Cd: \"\",\r\n  });\r\n\r\n  const changeHandler = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    setInputData((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const clickHandler = (event) => {\r\n    const { H, D, S, C, Q, Cd } = inputData;\r\n    let totalDisCountCost = 0;\r\n    let totalCost = 0;\r\n    const eoq = Math.sqrt(\r\n      (2 * parseFloat(D) * parseFloat(S)) / parseFloat(H)\r\n    ).toFixed(2);\r\n    const orderNumber = (parseFloat(D) / eoq).toFixed(2);\r\n    if (data) {\r\n      totalDisCountCost = (\r\n        orderNumber * parseFloat(S) +\r\n        (parseFloat(H) * Q) / 2 +\r\n        D * parseFloat(Cd)\r\n      ).toFixed(2);\r\n    }\r\n    totalCost = (\r\n      orderNumber * parseFloat(S) +\r\n      (parseFloat(H) * eoq) / 2 +\r\n      D * parseFloat(C)\r\n    ).toFixed(2);\r\n\r\n    setResults({\r\n      eoq,\r\n      N: orderNumber,\r\n      TC: totalCost,\r\n      TCd: totalDisCountCost,\r\n    });\r\n    setShowResults(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"data-form\">\r\n        <DataInput\r\n          tooltip=\"(Storage Costs + Employee Salaries + Opportunity Costs + Depreciation Costs) / Total Value of Annual Inventory\"\r\n          title=\"هزینه نگهداری کالا\"\r\n          description=\"Holding Cost\"\r\n          symbol=\"H\"\r\n          onChange={changeHandler}\r\n          value={inputData.H}\r\n        />\r\n        <DataInput\r\n          title=\"میزان نیاز در سال\"\r\n          description=\"Annual Demand\"\r\n          symbol=\"D\"\r\n          onChange={changeHandler}\r\n          value={inputData.D}\r\n        />\r\n        <DataInput\r\n          title=\"هزینه هربار سفارش\"\r\n          description=\"Order Cost\"\r\n          symbol=\"S\"\r\n          onChange={changeHandler}\r\n          value={inputData.S}\r\n        />\r\n        <DataInput\r\n          title=\"قیمت کالا\"\r\n          symbol=\"C\"\r\n          onChange={changeHandler}\r\n          value={inputData.C}\r\n        />\r\n        <Checkbox onClick={checkboxClickHandler} />\r\n        {data && (\r\n          <React.Fragment>\r\n            <DataInput\r\n              title=\"قیمت کالای تخفیف دار\"\r\n              symbol=\"Cd\"\r\n              onChange={changeHandler}\r\n              value={inputData.Cd}\r\n            />\r\n            <DataInput\r\n              title=\"حداقل میزان سفارش\"\r\n              description=\"برای شرکت در تخفیف قیمت کالا\"\r\n              symbol=\"Q\"\r\n              onChange={changeHandler}\r\n              value={inputData.Q}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        <Button onClick={clickHandler} />\r\n        {showResults && (\r\n          <React.Fragment>\r\n            <Resulsts\r\n              title=\"میزان اقتصادی سفارش\"\r\n              symbol=\"EOQ\"\r\n              value={results.eoq || 0}\r\n            />\r\n            <Resulsts\r\n              title=\"تعداد دفعات اقتصادی سفارش\"\r\n              symbol=\"N\"\r\n              value={results.N || 0}\r\n            />\r\n            <Resulsts\r\n              title=\"هزینه کل\"\r\n              description={data && \"برای میزان اقتصادی سفارش  \"}\r\n              tooltip={\"EOQ: \" + results.eoq}\r\n              symbol=\"TC\"\r\n              value={results.TC || 0}\r\n            />\r\n            {data && (\r\n              <Resulsts\r\n                title=\"هزینه کل\"\r\n                description=\"برای کالای تخفیف دار\"\r\n                tooltip={\"Q:\" + inputData.Q}\r\n                symbol=\"TC\"\r\n                value={results.TCd}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DataForm;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Copyright © 2021 Manikle Designs</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport DataForm from \"./components/DataForm\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <DataForm />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}